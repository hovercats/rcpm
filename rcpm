#!/bin/rc

flag e +

# This will eventually get removed
RCPM_PATH=$PWD/repo
RCPM_CACHE=$HOME/var/rcpm/bin
RCPM_ROOT=/tmp/fs
RCPM_DB=/var/db/rcpm

if (~ $#RCPM_PATH 0) {
	printf 'RCPM_PATH is not set\n'
	exit 1
}

fn rcpm_help {
	printf  'Usage: rcpm b|c|d||h|i|s\n'
}

fn dl_pkg {
	cd $RCPM_PATH/$pkg
	test -f `{awk '{print $2}' sha256} || curl -LK url -O
}

fn chksum_pkg {
	cd $RCPM_PATH/$pkg
	dl_pkg
	sha256sum -c sha256
}

fn unpack_pkg {
		for (archive in `{awk '{print $2}' sha256}) {
			switch($archive) {
				case *.gz
					tool=gzip
				case *.xz
					tool=xz
				case *.bz2
					tool=bz2
				case *
					exit 1
			}
		$tool -dc $archive | pax -r -s ',^[^/]*,src,'
		}
}

fn get_ver {
	version=`{cat $RCPM_PATH/$pkg/ver}
	ver=$version(1)
	rev=$version(2)

}
fn packup_pkg {
	mkdir -p ./$RCPM_DB/installed/$pkg
	get_ver
	echo $version >./$RCPM_DB/installed/$pkg/ver
	gen_manifest
	test -d $RCPM_CACHE || mkdir -p $RCPM_CACHE
	pax -w . | gzip > $RCPM_CACHE/$pkg@$ver-$rev.tar.gz
}

fn check_pkgbuilt {
	get_ver
	if (test ! -f $RCPM_CACHE/$pkg@$ver-$rev.tar.gz) {
		echo "$pkg is not built"
		exit 1
	}
	if not status=()
}

fn gen_manifest {
	find . | sed -e '/^\.\/$/d' -e 's/^\.//g' -e 's/\/$//g' \
		>./$RCPM_DB/installed/$pkg/manifest
}

fn pkg_install {
	cd $RCPM_ROOT
	check_pkgbuilt
	gzip -dc $RCPM_CACHE/$pkg@$ver-$rev.tar.gz | pax -r
}

fn pkg_build {
	for (pkg) {
		cd $RCPM_PATH/$pkg
		if (test ! -f url) git submodule update --init --checkout src
		if not {
			chksum_pkg $pkg
			rm -rf src
			unpack_pkg $archive
		}
		cd src
		destdir=/tmp/$pid/$pkg
		../build
		cd $destdir
		packup_pkg
		pkg_install
	}
}

switch($1) {
	case b
		shift
		pkg_build $*
	case c
		shift
		for (pkg) chksum_pkg $pkg
	case d
		shift
		for (pkg) dl_pkg $pkg
	case h
		rcpm_help
		exit 0
	case i
		shift
		for (pkg) pkg_install $pkg
	case s
		shift
		for (pkg in $*) find $RCPM_PATH -type d -name $pkg
	case *
		printf 'Error!\n'
		exit 1
}
